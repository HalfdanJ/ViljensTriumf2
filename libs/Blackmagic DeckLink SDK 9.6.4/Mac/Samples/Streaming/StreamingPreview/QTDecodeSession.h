/* -LICENSE-START-
** Copyright (c) 2011 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#import <Cocoa/Cocoa.h>
#import <QuickTime/ImageCompression.h>

#include "DeckLinkAPI.h"

@protocol DecodeSessionDelegate
- (void)haveVideoFrame:(CVPixelBufferRef)pixBuf fromNAL:(IBMDStreamingH264NALPacket*)nal;
@end

@interface QTDecodeSession : NSObject {
	id<DecodeSessionDelegate>	m_delegate;
	
	int							m_width;
	int							m_height;

	ICMDecompressionSessionRef	m_session;
	ICMDecompressionTrackingCallbackRecord	m_tracking;

	BOOL						m_needsSPS;
	BOOL						m_needsPPS;
	BOOL						m_hasSentNALs;
	
	BOOL						m_nalDecompressed;
	CVPixelBufferRef			m_pixBuf;
	
	IBMDStreamingH264NALPacket*	m_firstSPS;
	IBMDStreamingH264NALPacket*	m_firstPPS;
	
	IBMDStreamingH264NALParser*	m_nalParser;
}

- (id)initWithMovieWidth:(int)width andHeight:(int)height;

- (void)setDelegate:(id<DecodeSessionDelegate>)delegate;
- (void)handleH264NAL:(IBMDStreamingH264NALPacket*)nal;

- (void)decompressionCompleteWithResult:(OSStatus)result flags:(ICMDecompressionTrackingFlags)flags pixBuf:(CVPixelBufferRef)pixBuf
								   time:(TimeValue64)time duration:(TimeValue64)duration
							  timeFlags:(ICMValidTimeFlags)timeFlags;

@end
